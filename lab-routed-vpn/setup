#!/bin/sh

LABNAME="routed-vpn"

cd "$(dirname "$(readlink -f "$0")")"
. ../common/lab-setup
SWITCH_MON=1

asns=3                          # number of AS
vpns=2                          # number of VPNs per AS

# Which VM to spawn
for asn in $(seq 1 $asns); do
    for vpn in $(seq 1 $vpns); do
        networks=1,$(( asn*2 )),$(( asn*2 + 1))
        case V$asn-$vpn in
            # V3-2)
            #     spawn juniper-vsrx V3-2 networks $networks
            #     ;;
            *)
                spawn vm V$asn-$vpn networks $networks
                ;;
        esac
    done
done

spawn vm Rx networks $(seq -s, 3 2 $(( asns*2 + 1 )))

run

case $uts in
    Rx)
        for i in $(seq 1 $asns); do
            ip netns add R$i
            ip link set netns R$i dev eth$((i-1))
            ip netns exec R$i ip link set name eth0 dev eth$((i-1))
            ip netns exec R$i ip link set up dev eth0
            ip netns exec R$i ip link add type dummy
            ip netns exec R$i ip link set up dev dummy0
            ip netns exec R$i ip addr add 2001:db8:a$i::1/64 dev dummy0
            template bird6.Rx.Ry.conf bird6.Rx.R$i.conf asn=$i
            netns=R$i service bird
        done
        ;;
    V*)
        asn=${uts#V}
        asn=${asn%-*}
        vpn=${uts#*-}

        sysctl -qw net.ipv6.conf.all.forwarding=1

        ip netns add private
        ip netns exec private sysctl -qw net.ipv6.conf.all.forwarding=1
        ip link set netns private dev eth1
        ip link set netns private dev eth2
        ip -n private link set up dev eth1
        ip -n private link set up dev eth2
        ip -n private link add type dummy
        ip -n private link set up dev dummy0

        ip addr add 2001:db8:$asn::$vpn/128 dev dummy0

        # We order asn,vpn,rasn,rvpn pairs such that we can get an IP address by getting the index
        pairs=$(python -c 'import itertools;print(":".join([",".join((str(y) for y in x)) for x in itertools.chain(*[((asn,vpn,rasn,rvpn),(rasn,rvpn,asn,vpn)) for asn in range(1,'$asns'+1) for vpn in range(1,'$vpns'+1) for rasn in range(1,'$asns'+1) for rvpn in range(1,'$vpns'+1) if asn < rasn])]))')

        template bird6.Vx-y.public.conf  bird6.$uts.conf asn=$asn vpn=$vpn
        template bird6.Vx-y.private.conf bird6.$uts.private.conf asn=$asn vpn=$vpn asns=$asns vpns=$vpns pairs='"'$pairs'"'

        for rasn in $(seq 1 $asns); do
            [ $rasn -ne $asn ] || continue
            for rvpn in $(seq 1 $vpns); do
                rmark=$(( (rasn-1)*vpns + rvpn ))
                idx=$(echo $pairs | tr ':' '\n' | grep -Fxn $asn,$vpn,$rasn,$rvpn | cut -f1 -d:)
                me=2001:db8:ff::$((idx-1))
                ip tunnel add vti$rmark \
                   mode vti6 \
                   local 2001:db8:$asn::$vpn \
                   remote 2001:db8:$rasn::$rvpn \
                   key $rmark
                ip link set netns private dev vti$rmark
                ip -n private addr add $me/127 dev vti$rmark
                ip netns exec private sysctl -qw "net.ipv4.conf.vti$rmark.disable_policy=1"
                ip -n private link set vti$rmark mtu 1500
                ip -n private link set vti$rmark up
            done
        done

        template ipsec.Vx-y.conf ipsec.$uts.conf asn=$asn vpn=$vpn asns=$asns vpns=$vpns
        template ipsec.Vx-y.secrets ipsec.$uts.secrets asn=$asn vpn=$vpn asns=$asns vpns=$vpns
        ln -sf $PWD/ipsec.$uts.secrets /etc/ipsec.secrets
        ln -sf $PWD/ipsec.$uts.conf /etc/ipsec.conf
        sed -i 's/\( *\)# install_routes =.*/\1 install_routes = no/' /etc/strongswan.d/charon.conf
        sed -i 's/\( *\)# install_virtual_ip =.*/\1 install_virtual_ip = no/' /etc/strongswan.d/charon.conf
        sed -i 's/\( *\)# routing_table =.*/\1 routing_table = 0/' /etc/strongswan.d/charon.conf
        service ipsec start

        service bird
        netns=private service bird
        ;;
esac
